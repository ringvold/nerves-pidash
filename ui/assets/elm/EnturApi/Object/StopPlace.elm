-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module EnturApi.Object.StopPlace exposing (..)

import EnturApi.Enum.InterchangeWeighting
import EnturApi.Enum.Mode
import EnturApi.Enum.TransportMode
import EnturApi.Enum.TransportSubmode
import EnturApi.Enum.WheelchairBoarding
import EnturApi.InputObject
import EnturApi.Interface
import EnturApi.Object
import EnturApi.Scalar
import EnturApi.ScalarCodecs
import EnturApi.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


id : SelectionSet EnturApi.ScalarCodecs.Id EnturApi.Object.StopPlace
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (EnturApi.ScalarCodecs.codecs |> EnturApi.Scalar.unwrapCodecs |> .codecId |> .decoder)


name : SelectionSet String EnturApi.Object.StopPlace
name =
    Object.selectionForField "String" "name" [] Decode.string


latitude : SelectionSet (Maybe Float) EnturApi.Object.StopPlace
latitude =
    Object.selectionForField "(Maybe Float)" "latitude" [] (Decode.float |> Decode.nullable)


longitude : SelectionSet (Maybe Float) EnturApi.Object.StopPlace
longitude =
    Object.selectionForField "(Maybe Float)" "longitude" [] (Decode.float |> Decode.nullable)


description : SelectionSet (Maybe String) EnturApi.Object.StopPlace
description =
    Object.selectionForField "(Maybe String)" "description" [] (Decode.string |> Decode.nullable)


{-| Whether this stop place is suitable for wheelchair boarding.
-}
wheelchairBoarding : SelectionSet (Maybe EnturApi.Enum.WheelchairBoarding.WheelchairBoarding) EnturApi.Object.StopPlace
wheelchairBoarding =
    Object.selectionForField "(Maybe Enum.WheelchairBoarding.WheelchairBoarding)" "wheelchairBoarding" [] (EnturApi.Enum.WheelchairBoarding.decoder |> Decode.nullable)


{-| Relative weighting of this stop with regards to interchanges.
-}
weighting : SelectionSet (Maybe EnturApi.Enum.InterchangeWeighting.InterchangeWeighting) EnturApi.Object.StopPlace
weighting =
    Object.selectionForField "(Maybe Enum.InterchangeWeighting.InterchangeWeighting)" "weighting" [] (EnturApi.Enum.InterchangeWeighting.decoder |> Decode.nullable)


tariffZones : SelectionSet decodesTo EnturApi.Object.TariffZone -> SelectionSet (List (Maybe decodesTo)) EnturApi.Object.StopPlace
tariffZones object_ =
    Object.selectionForCompositeField "tariffZones" [] object_ (identity >> Decode.nullable >> Decode.list)


{-| The transport mode serviced by this stop place.
-}
transportMode : SelectionSet (Maybe EnturApi.Enum.TransportMode.TransportMode) EnturApi.Object.StopPlace
transportMode =
    Object.selectionForField "(Maybe Enum.TransportMode.TransportMode)" "transportMode" [] (EnturApi.Enum.TransportMode.decoder |> Decode.nullable)


{-| The transport submode serviced by this stop place.
-}
transportSubmode : SelectionSet (Maybe EnturApi.Enum.TransportSubmode.TransportSubmode) EnturApi.Object.StopPlace
transportSubmode =
    Object.selectionForField "(Maybe Enum.TransportSubmode.TransportSubmode)" "transportSubmode" [] (EnturApi.Enum.TransportSubmode.decoder |> Decode.nullable)


{-| This stop place's adjacent sites
-}
adjacentSites : SelectionSet (Maybe (List (Maybe String))) EnturApi.Object.StopPlace
adjacentSites =
    Object.selectionForField "(Maybe (List (Maybe String)))" "adjacentSites" [] (Decode.string |> Decode.nullable |> Decode.list |> Decode.nullable)


timezone : SelectionSet String EnturApi.Object.StopPlace
timezone =
    Object.selectionForField "String" "timezone" [] Decode.string


type alias QuaysOptionalArguments =
    { filterByInUse : OptionalArgument Bool }


{-| Returns all quays that are children of this stop place

  - filterByInUse - If true only quays with at least one visiting line are included.

-}
quays : (QuaysOptionalArguments -> QuaysOptionalArguments) -> SelectionSet decodesTo EnturApi.Object.Quay -> SelectionSet (Maybe (List (Maybe decodesTo))) EnturApi.Object.StopPlace
quays fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { filterByInUse = Absent }

        optionalArgs =
            [ Argument.optional "filterByInUse" filledInOptionals.filterByInUse Encode.bool ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "quays" optionalArgs object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


{-| Returns parent stop for this stop
-}
parent : SelectionSet decodesTo EnturApi.Object.StopPlace -> SelectionSet (Maybe decodesTo) EnturApi.Object.StopPlace
parent object_ =
    Object.selectionForCompositeField "parent" [] object_ (identity >> Decode.nullable)


type alias EstimatedCallsOptionalArguments =
    { startTime : OptionalArgument EnturApi.ScalarCodecs.DateTime
    , timeRange : OptionalArgument Int
    , numberOfDepartures : OptionalArgument Int
    , numberOfDeparturesPerLineAndDestinationDisplay : OptionalArgument Int
    , omitNonBoarding : OptionalArgument Bool
    , includeCancelledTrips : OptionalArgument Bool
    , whiteListed : OptionalArgument EnturApi.InputObject.InputWhiteListed
    , whiteListedModes : OptionalArgument (List (Maybe EnturApi.Enum.Mode.Mode))
    }


{-| List of visits to this stop place as part of vehicle journeys.

  - startTime - DateTime for when to fetch estimated calls from. Default value is current time
  - numberOfDepartures - Limit the total number of departures returned.
  - numberOfDeparturesPerLineAndDestinationDisplay - Limit the number of departures per line and destination display returned. The parameter is only applied when the value is between 1 and 'numberOfDepartures'.
  - whiteListed - Parameters for indicating the only authorities and/or lines or quays to list estimatedCalls for
  - whiteListedModes - Only show estimated calls for selected modes.

-}
estimatedCalls : (EstimatedCallsOptionalArguments -> EstimatedCallsOptionalArguments) -> SelectionSet decodesTo EnturApi.Object.EstimatedCall -> SelectionSet (List (Maybe decodesTo)) EnturApi.Object.StopPlace
estimatedCalls fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { startTime = Absent, timeRange = Absent, numberOfDepartures = Absent, numberOfDeparturesPerLineAndDestinationDisplay = Absent, omitNonBoarding = Absent, includeCancelledTrips = Absent, whiteListed = Absent, whiteListedModes = Absent }

        optionalArgs =
            [ Argument.optional "startTime" filledInOptionals.startTime (EnturApi.ScalarCodecs.codecs |> EnturApi.Scalar.unwrapEncoder .codecDateTime), Argument.optional "timeRange" filledInOptionals.timeRange Encode.int, Argument.optional "numberOfDepartures" filledInOptionals.numberOfDepartures Encode.int, Argument.optional "numberOfDeparturesPerLineAndDestinationDisplay" filledInOptionals.numberOfDeparturesPerLineAndDestinationDisplay Encode.int, Argument.optional "omitNonBoarding" filledInOptionals.omitNonBoarding Encode.bool, Argument.optional "includeCancelledTrips" filledInOptionals.includeCancelledTrips Encode.bool, Argument.optional "whiteListed" filledInOptionals.whiteListed EnturApi.InputObject.encodeInputWhiteListed, Argument.optional "whiteListedModes" filledInOptionals.whiteListedModes (Encode.enum EnturApi.Enum.Mode.toString |> Encode.maybe |> Encode.list) ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "estimatedCalls" optionalArgs object_ (identity >> Decode.nullable >> Decode.list)
