-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module EnturApi.Object.PathGuidance exposing (..)

import EnturApi.Enum.AbsoluteDirection
import EnturApi.Enum.Locale
import EnturApi.Enum.RelativeDirection
import EnturApi.InputObject
import EnturApi.Interface
import EnturApi.Object
import EnturApi.Scalar
import EnturApi.ScalarCodecs
import EnturApi.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The distance in meters that this step takes.
-}
distance : SelectionSet (Maybe Float) EnturApi.Object.PathGuidance
distance =
    Object.selectionForField "(Maybe Float)" "distance" [] (Decode.float |> Decode.nullable)


{-| The relative direction of this step.
-}
relativeDirection : SelectionSet (Maybe EnturApi.Enum.RelativeDirection.RelativeDirection) EnturApi.Object.PathGuidance
relativeDirection =
    Object.selectionForField "(Maybe Enum.RelativeDirection.RelativeDirection)" "relativeDirection" [] (EnturApi.Enum.RelativeDirection.decoder |> Decode.nullable)


{-| The name of the street.
-}
streetName : SelectionSet (Maybe String) EnturApi.Object.PathGuidance
streetName =
    Object.selectionForField "(Maybe String)" "streetName" [] (Decode.string |> Decode.nullable)


{-| The absolute direction of this step.
-}
heading : SelectionSet (Maybe EnturApi.Enum.AbsoluteDirection.AbsoluteDirection) EnturApi.Object.PathGuidance
heading =
    Object.selectionForField "(Maybe Enum.AbsoluteDirection.AbsoluteDirection)" "heading" [] (EnturApi.Enum.AbsoluteDirection.decoder |> Decode.nullable)


{-| When exiting a highway or traffic circle, the exit name/number.
-}
exit : SelectionSet (Maybe String) EnturApi.Object.PathGuidance
exit =
    Object.selectionForField "(Maybe String)" "exit" [] (Decode.string |> Decode.nullable)


{-| Indicates whether or not a street changes direction at an intersection.
-}
stayOn : SelectionSet (Maybe Bool) EnturApi.Object.PathGuidance
stayOn =
    Object.selectionForField "(Maybe Bool)" "stayOn" [] (Decode.bool |> Decode.nullable)


{-| This step is on an open area, such as a plaza or train platform, and thus the directions should say something like "cross"
-}
area : SelectionSet (Maybe Bool) EnturApi.Object.PathGuidance
area =
    Object.selectionForField "(Maybe Bool)" "area" [] (Decode.bool |> Decode.nullable)


{-| The name of this street was generated by the system, so we should only display it once, and generally just display right/left directions
-}
bogusName : SelectionSet (Maybe Bool) EnturApi.Object.PathGuidance
bogusName =
    Object.selectionForField "(Maybe Bool)" "bogusName" [] (Decode.bool |> Decode.nullable)


{-| The latitude of the step.
-}
latitude : SelectionSet (Maybe Float) EnturApi.Object.PathGuidance
latitude =
    Object.selectionForField "(Maybe Float)" "latitude" [] (Decode.float |> Decode.nullable)


{-| The longitude of the step.
-}
longitude : SelectionSet (Maybe Float) EnturApi.Object.PathGuidance
longitude =
    Object.selectionForField "(Maybe Float)" "longitude" [] (Decode.float |> Decode.nullable)


type alias LegStepTextOptionalArguments =
    { locale : OptionalArgument EnturApi.Enum.Locale.Locale }


{-| Direction information as readable text.
-}
legStepText : (LegStepTextOptionalArguments -> LegStepTextOptionalArguments) -> SelectionSet (Maybe String) EnturApi.Object.PathGuidance
legStepText fillInOptionals =
    let
        filledInOptionals =
            fillInOptionals { locale = Absent }

        optionalArgs =
            [ Argument.optional "locale" filledInOptionals.locale (Encode.enum EnturApi.Enum.Locale.toString) ]
                |> List.filterMap identity
    in
    Object.selectionForField "(Maybe String)" "legStepText" optionalArgs (Decode.string |> Decode.nullable)
