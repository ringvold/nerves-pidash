-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module EnturApi.Enum.FilterPlaceType exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-|

  - Quay - Quay
  - StopPlace - StopPlace
  - BicycleRent - Bicycle rent stations
  - BikePark - Bike parks
  - CarPark - Car parks

-}
type FilterPlaceType
    = Quay
    | StopPlace
    | BicycleRent
    | BikePark
    | CarPark


list : List FilterPlaceType
list =
    [ Quay, StopPlace, BicycleRent, BikePark, CarPark ]


decoder : Decoder FilterPlaceType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "quay" ->
                        Decode.succeed Quay

                    "stopPlace" ->
                        Decode.succeed StopPlace

                    "bicycleRent" ->
                        Decode.succeed BicycleRent

                    "bikePark" ->
                        Decode.succeed BikePark

                    "carPark" ->
                        Decode.succeed CarPark

                    _ ->
                        Decode.fail ("Invalid FilterPlaceType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : FilterPlaceType -> String
toString enum =
    case enum of
        Quay ->
            "quay"

        StopPlace ->
            "stopPlace"

        BicycleRent ->
            "bicycleRent"

        BikePark ->
            "bikePark"

        CarPark ->
            "carPark"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe FilterPlaceType
fromString enumString =
    case enumString of
        "quay" ->
            Just Quay

        "stopPlace" ->
            Just StopPlace

        "bicycleRent" ->
            Just BicycleRent

        "bikePark" ->
            Just BikePark

        "carPark" ->
            Just CarPark

        _ ->
            Nothing
