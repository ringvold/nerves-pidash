-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module EnturApi.Enum.FlexibleServiceType exposing (FlexibleServiceType(..), decoder, fromString, list, toString)

import Json.Decode as Decode exposing (Decoder)


type FlexibleServiceType
    = DynamicPassingTimes
    | FixedHeadwayFrequency
    | FixedPassingTimes
    | NotFlexible
    | Other


list : List FlexibleServiceType
list =
    [ DynamicPassingTimes, FixedHeadwayFrequency, FixedPassingTimes, NotFlexible, Other ]


decoder : Decoder FlexibleServiceType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "dynamicPassingTimes" ->
                        Decode.succeed DynamicPassingTimes

                    "fixedHeadwayFrequency" ->
                        Decode.succeed FixedHeadwayFrequency

                    "fixedPassingTimes" ->
                        Decode.succeed FixedPassingTimes

                    "notFlexible" ->
                        Decode.succeed NotFlexible

                    "other" ->
                        Decode.succeed Other

                    _ ->
                        Decode.fail ("Invalid FlexibleServiceType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : FlexibleServiceType -> String
toString enum =
    case enum of
        DynamicPassingTimes ->
            "dynamicPassingTimes"

        FixedHeadwayFrequency ->
            "fixedHeadwayFrequency"

        FixedPassingTimes ->
            "fixedPassingTimes"

        NotFlexible ->
            "notFlexible"

        Other ->
            "other"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe FlexibleServiceType
fromString enumString =
    case enumString of
        "dynamicPassingTimes" ->
            Just DynamicPassingTimes

        "fixedHeadwayFrequency" ->
            Just FixedHeadwayFrequency

        "fixedPassingTimes" ->
            Just FixedPassingTimes

        "notFlexible" ->
            Just NotFlexible

        "other" ->
            Just Other

        _ ->
            Nothing
