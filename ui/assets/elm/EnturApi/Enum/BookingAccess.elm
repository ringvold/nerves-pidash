-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module EnturApi.Enum.BookingAccess exposing (BookingAccess(..), decoder, fromString, list, toString)

import Json.Decode as Decode exposing (Decoder)


type BookingAccess
    = PublicAccess
    | AuthorisedPublic
    | Staff
    | Other


list : List BookingAccess
list =
    [ PublicAccess, AuthorisedPublic, Staff, Other ]


decoder : Decoder BookingAccess
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "publicAccess" ->
                        Decode.succeed PublicAccess

                    "authorisedPublic" ->
                        Decode.succeed AuthorisedPublic

                    "staff" ->
                        Decode.succeed Staff

                    "other" ->
                        Decode.succeed Other

                    _ ->
                        Decode.fail ("Invalid BookingAccess type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : BookingAccess -> String
toString enum =
    case enum of
        PublicAccess ->
            "publicAccess"

        AuthorisedPublic ->
            "authorisedPublic"

        Staff ->
            "staff"

        Other ->
            "other"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe BookingAccess
fromString enumString =
    case enumString of
        "publicAccess" ->
            Just PublicAccess

        "authorisedPublic" ->
            Just AuthorisedPublic

        "staff" ->
            Just Staff

        "other" ->
            Just Other

        _ ->
            Nothing
